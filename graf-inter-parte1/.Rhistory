install.packages("raster")
install.packages("leaflet")
knitr::opts_chunk$set(echo = TRUE)
set.seed(100)
library(ggplot2)
library(plotly)
library(reshape2)
d <- diamonds[sample(nrow(diamonds), 1000), ]
g1 <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
ggplotly(g1)
g2 <- ggplot(aes(x = total_bill, y = tip, col=sex), data = tips) +
geom_point() +
geom_smooth(method = 'lm', col=4) +
theme(legend.position = "none")
ggplotly(g2)
g3 <- tibble(y=rnorm(1000)) %>%
ggplot(data=., mapping = aes(x=y)) +
geom_density(col=4, fill=2, alpha=0.3)
set.seed(100)
library(tidyverse)
library(plotly)
library(reshape2)
d <- diamonds[sample(nrow(diamonds), 1000), ]
g1 <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
ggplotly(g1)
g2 <- ggplot(aes(x = total_bill, y = tip, col=sex), data = tips) +
geom_point() +
geom_smooth(method = 'lm', col=4) +
theme(legend.position = "none")
ggplotly(g2)
g3 <- tibble(y=rnorm(1000)) %>%
ggplot(data=., mapping = aes(x=y)) +
geom_density(col=4, fill=2, alpha=0.3)
ggplotly(g3)
g4 <- ggplot(data=mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~year)
ggplotly(g4)
library(gapminder)
p <- gapminder %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
p
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/globe_contours.csv')
df$id <- seq_len(nrow(df))
library(tidyr)
d <- df %>%
gather(key, value, -id) %>%
separate(key, c("l", "line"), "\\.") %>%
spread(l, value)
geo <- list(
showland = TRUE,
showlakes = TRUE,
showcountries = TRUE,
showocean = TRUE,
countrywidth = 0.5,
landcolor = 'rgb(230, 145, 56)',
lakecolor = 'rgb(0, 255, 255)',
oceancolor = 'rgb(0, 255, 255)',
projection = list(
type = 'orthographic',
rotation = list(
lon = -100,
lat = 40,
roll = 0
)
),
lonaxis = list(
showgrid = TRUE,
gridcolor = toRGB("gray40"),
gridwidth = 0.5
),
lataxis = list(
showgrid = TRUE,
gridcolor = toRGB("gray40"),
gridwidth = 0.5
)
)
## add custom events
# dropdown
projections = data.frame(type = c("equirectangular", "mercator", "orthographic", "natural earth","kavrayskiy7",
"miller", "robinson", "eckert4", "azimuthal equal area","azimuthal equidistant",
"conic equal area", "conic conformal", "conic equidistant", "gnomonic", "stereographic",
"mollweide", "hammer", "transverse mercator", "albers usa", "winkel tripel"))
all_buttons <- list()
for (i in 1:length(projections[,])) {
all_buttons[[i]] <- list(method = "relayout",
args = list(list(geo.projection.type = projections$type[i])),
label = projections$type[i])
}
# sliders
lon_range = data.frame(seq(-180, 180, 10))
lat_range = data.frame(seq(-90, 90, 10))
colnames(lon_range) <- "x"
colnames(lat_range) <- "x"
all_lat <- list()
for (i in 1:length(lat_range[,])) {
all_lat[[i]] <- list(method = "relayout",
args = list(list(geo.projection.rotation.lat = lat_range$x[i])),
label = lat_range$x[i])
}
all_lon <- list()
for (i in 1:length(lon_range[,])) {
all_lon[[i]] <- list(method = "relayout",
args = list(list(geo.projection.rotation.lon = lon_range$x[i])),
label = lon_range$x[i])
}
# annotations
annot <- list(x = 0, y=0.8, text = "Projection", yanchor = 'bottom',
xref = 'paper', xanchor = 'right',
showarrow = FALSE)
# original d3-globe with contours
fig<- plot_geo(d)
fig <- fig %>% group_by(line)
fig <- fig %>% add_lines(x = ~lon, y = ~lat, color = ~line, colors = 'Reds')
fig <- fig %>% layout(
showlegend = FALSE, geo = geo
)
# plot with custom events
fig<- fig
fig <- fig %>% layout(annotations = annot,
updatemenus = list(list(active = 2, x = 0, y = 0.8,
buttons=all_buttons)),
sliders = list(
list(
active = (length(lon_range[,])-1)/2,
currentvalue = list(prefix = "Longitude: "),
pad = list(t = 20),
steps = all_lon),
list(
active = (length(lat_range[,])-1)/2,
currentvalue = list(prefix = "Latitude: "),
pad = list(t = 100),
steps = all_lat)))
fig
saveRDS(df,file='globe_contours.csv')
library(plotly)
g <- list(
projection = list(
type = 'orthographic'
),
showland = TRUE,
landcolor = toRGB("#e5ecf6")
)
fig <- plot_ly(type = 'scattergeo', mode = 'markers')
fig <- fig %>% layout(geo = g)
fig
knitr::opts_chunk$set(echo = TRUE)
m <- leaflet() %>%
addTiles() %>%  # Mapa OpenStreetMap
addMarkers(lat=as.numeric(-25.450622293556865),
lng=as.numeric(-49.231463545405695),
label="<strong>PET Estatística UFPR</strong><br/>PC-09",
popup = "<strong>PET Estatística UFPR</strong><br/>PC-09")
m <- leaflet() %>%
addTiles() %>%  # Mapa OpenStreetMap
addMarkers(lat=as.numeric(-25.450622293556865),
lng=as.numeric(-49.231463545405695),
label="<strong>PET Estatística UFPR</strong><br/>PC-09",
popup = "<strong>PET Estatística UFPR</strong><br/>PC-09")
library(tidyverse)
m <- leaflet() %>%
addTiles() %>%  # Mapa OpenStreetMap
addMarkers(lat=as.numeric(-25.450622293556865),
lng=as.numeric(-49.231463545405695),
label="<strong>PET Estatística UFPR</strong><br/>PC-09",
popup = "<strong>PET Estatística UFPR</strong><br/>PC-09")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Mapa OpenStreetMap
addMarkers(lat=as.numeric(-25.450622293556865),
lng=as.numeric(-49.231463545405695),
label="<strong>PET Estatística UFPR</strong><br/>PC-09",
popup = "<strong>PET Estatística UFPR</strong><br/>PC-09")
m
library(leaflet)
m <- leaflet() %>%
setView(lat=-25.4102,
lng=-49.267,
zoom = 18) %>%
addProviderTiles("OpenStreetMap") %>%
addPopups(lat=--25.4102,
lng=-49.267,
"<strong>Museu Oscar Niemeyer</strong>",
options = popupOptions(closeButton = FALSE))
m
library(leaflet)
m <- leaflet() %>%
setView(lat=-25.4102,
lng=-49.267,
zoom = 18) %>%
addProviderTiles("OpenStreetMap") %>%
addPopups(lat=-25.4102,
lng=-49.267,
"<strong>Museu Oscar Niemeyer</strong>",
options = popupOptions(closeButton = FALSE))
m
m %>% addPopups(-49.267, -25.4102,
paste("<b> Museu Oscar Niemeyer </b>","<br/>",
"Rua Marechal Hermes, 999","<br/>",
"Curitiba - PR, Centro Cívico"))
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Stamen.Toner)
m %>% addPopups(-49.267, -25.4102,
paste("<b> Museu Oscar Niemeyer </b>","<br/>",
"Rua Marechal Hermes, 999","<br/>",
"Curitiba - PR, Centro Cívico"))
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Stamen.TonerHybrid)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Stamen.TonerHybrid)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Esri.NatGeoWorldMap)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Stamen.Toner)
m %>% addProviderTiles(providers$Stamen.Toner)
names(providers)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Wikimedia)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$nlmaps)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$MapBox)
m %>% addProviderTiles(providers$MapBox)
m %>% addProviderTiles(providers$OneMapSG.LandLot)
m %>% addProviderTiles(providers$OpenWeatherMap)
m %>% addProviderTiles(providers$HERE.normalDay)
m %>% addProviderTiles(providers$HERE.terrainDay)
m %>% addProviderTiles(providers$Thunderforest)
library(leaflet)
m <- leaflet() %>%
setView(lat=-25.4102,
lng=-49.267,
zoom = 18) %>%
addProviderTiles("OpenStreetMap") %>%
addPopups(lat=-25.4102,
lng=-49.267,
"<strong>Museu Oscar Niemeyer</strong>",
options = popupOptions(closeButton = FALSE))
m
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(df.20)
)
getColor(1)
library(leaflet)
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(1)
)
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(1)
)
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
# volcano is a numeric matrix that ships with R
fig <- plot_ly(z = ~volcano)
fig <- fig %>% add_surface()
fig
blogdown:::preview_site()
warnings()
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
g <- list(
projection = list(
type = 'orthographic'
),
showland = TRUE,
landcolor = toRGB("#e5ecf6")
)
fig <- plot_ly(type = 'scattergeo', mode = 'markers')
fig <- fig %>% layout(geo = g)
fig
