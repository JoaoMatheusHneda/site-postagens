color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/27081/ahu-tongariki.svg',
aspectRatio = 0.75
)
)
)
)
)
saveRDS(hc_inicial,file="hc_inicial.RDS")
readRDS(file="hc_inicial.RDS")
library(magrittr)
library(highcharter)
hc_inicial <- highchart() %>%
# add the module
hc_add_dependency("modules/pattern-fill.js") %>%
hc_size(heigh = 350) %>%
hc_xAxis(type = 'category') %>%
hc_tooltip(
borderColor = "#CACACA",
pointFormat = 'The height for <b>{point.name}</b> is <b>{point.y}</b>'
) %>%
# hc_chart(
#   plotBackgroundColor = list(
#     linearGradient = c(0, 0, 0, 500),
#     stops = list(
#       list(0.0, 'rgb(240, 178, 79)'),
#       list(0.5, 'rgb(202, 108, 70)'),
#       list(0.9, 'rgb(12, 5, 36)')
#       )
#     )
# ) %>%
# hc_xAxis(gridLineColor = 'transparent') %>%
# hc_yAxis(gridLineColor = 'transparent') %>%
hc_add_series(
type = "column",
showInLegend = FALSE,
pointWidth = 110,
pointPadding = 0.25,
borderColor = "transparent",
borderWidth = 0,
data = list(
list(
name = "Petronas",
y = 100,
color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/27082/petronas-towers.svg',
aspectRatio = 1.3
)
)
),
list(
name = 'Pisa',
y = 150,
color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/1171/tower-of-pisa.svg',
aspectRatio = 1
)
)
),
list(
name = 'Eiffel tower',
y = 200,
color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/19456/tokyo-tower.svg',
aspectRatio = 0.8
)
)
),
list(
name = 'Ahu-tongariki',
y = 250,
color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/27081/ahu-tongariki.svg',
aspectRatio = 0.75
)
)
)
)
)
saveRDS(hc_inicial,file="hc_inicial.rda")
readRDS(file="hc_inicial.rda")
# library(magrittr)
# library(highcharter)
#
# hc_inicial <- highchart() %>%
#   # add the module
#   hc_add_dependency("modules/pattern-fill.js") %>%
#   hc_size(heigh = 350) %>%
#   hc_xAxis(type = 'category') %>%
#   hc_tooltip(
#     borderColor = "#CACACA",
#     pointFormat = 'The height for <b>{point.name}</b> is <b>{point.y}</b>'
#     ) %>%
#   # hc_chart(
#   #   plotBackgroundColor = list(
#   #     linearGradient = c(0, 0, 0, 500),
#   #     stops = list(
#   #       list(0.0, 'rgb(240, 178, 79)'),
#   #       list(0.5, 'rgb(202, 108, 70)'),
#   #       list(0.9, 'rgb(12, 5, 36)')
#   #       )
#   #     )
#   # ) %>%
#   # hc_xAxis(gridLineColor = 'transparent') %>%
#   # hc_yAxis(gridLineColor = 'transparent') %>%
#   hc_add_series(
#     type = "column",
#     showInLegend = FALSE,
#     pointWidth = 110,
#     pointPadding = 0.25,
#     borderColor = "transparent",
#     borderWidth = 0,
#     data = list(
#       list(
#         name = "Petronas",
#         y = 100,
#         color = list(
#           pattern = list(
#              image = 'https://www.svgrepo.com/show/27082/petronas-towers.svg',
#              aspectRatio = 1.3
#           )
#         )
#       ),
#       list(
#         name = 'Pisa',
#         y = 150,
#         color = list(
#           pattern = list(
#             image = 'https://www.svgrepo.com/show/1171/tower-of-pisa.svg',
#             aspectRatio = 1
#           )
#         )
#       ),
#       list(
#         name = 'Eiffel tower',
#         y = 200,
#         color = list(
#           pattern = list(
#             image = 'https://www.svgrepo.com/show/19456/tokyo-tower.svg',
#             aspectRatio = 0.8
#             )
#           )
#       ),
#       list(
#         name = 'Ahu-tongariki',
#         y = 250,
#         color = list(
#           pattern = list(
#             image = 'https://www.svgrepo.com/show/27081/ahu-tongariki.svg',
#             aspectRatio = 0.75
#           )
#         )
#       )
#     )
#   )
# saveRDS(hc_inicial,file="hc_inicial.rda")
readRDS(file="hc_inicial.rda")
# library(magrittr)
# library(highcharter)
#
# hc_inicial <- highchart() %>%
#   # add the module
#   hc_add_dependency("modules/pattern-fill.js") %>%
#   hc_size(heigh = 350) %>%
#   hc_xAxis(type = 'category') %>%
#   hc_tooltip(
#     borderColor = "#CACACA",
#     pointFormat = 'The height for <b>{point.name}</b> is <b>{point.y}</b>'
#     ) %>%
#   # hc_chart(
#   #   plotBackgroundColor = list(
#   #     linearGradient = c(0, 0, 0, 500),
#   #     stops = list(
#   #       list(0.0, 'rgb(240, 178, 79)'),
#   #       list(0.5, 'rgb(202, 108, 70)'),
#   #       list(0.9, 'rgb(12, 5, 36)')
#   #       )
#   #     )
#   # ) %>%
#   # hc_xAxis(gridLineColor = 'transparent') %>%
#   # hc_yAxis(gridLineColor = 'transparent') %>%
#   hc_add_series(
#     type = "column",
#     showInLegend = FALSE,
#     pointWidth = 110,
#     pointPadding = 0.25,
#     borderColor = "transparent",
#     borderWidth = 0,
#     data = list(
#       list(
#         name = "Petronas",
#         y = 100,
#         color = list(
#           pattern = list(
#              image = 'https://www.svgrepo.com/show/27082/petronas-towers.svg',
#              aspectRatio = 1.3
#           )
#         )
#       ),
#       list(
#         name = 'Pisa',
#         y = 150,
#         color = list(
#           pattern = list(
#             image = 'https://www.svgrepo.com/show/1171/tower-of-pisa.svg',
#             aspectRatio = 1
#           )
#         )
#       ),
#       list(
#         name = 'Eiffel tower',
#         y = 200,
#         color = list(
#           pattern = list(
#             image = 'https://www.svgrepo.com/show/19456/tokyo-tower.svg',
#             aspectRatio = 0.8
#             )
#           )
#       ),
#       list(
#         name = 'Ahu-tongariki',
#         y = 250,
#         color = list(
#           pattern = list(
#             image = 'https://www.svgrepo.com/show/27081/ahu-tongariki.svg',
#             aspectRatio = 0.75
#           )
#         )
#       )
#     )
#   )
# saveRDS(hc_inicial,file="hc_inicial.rda")
library(magrittr)
library(highcharter)
readRDS(file="hc_inicial.rda")
library(magrittr)
library(highcharter)
highchart() %>%
# add the module
hc_add_dependency("modules/pattern-fill.js") %>%
hc_size(heigh = 350) %>%
hc_xAxis(type = 'category') %>%
hc_tooltip(
borderColor = "#CACACA",
pointFormat = 'The height for <b>{point.name}</b> is <b>{point.y}</b>'
) %>%
# hc_chart(
#   plotBackgroundColor = list(
#     linearGradient = c(0, 0, 0, 500),
#     stops = list(
#       list(0.0, 'rgb(240, 178, 79)'),
#       list(0.5, 'rgb(202, 108, 70)'),
#       list(0.9, 'rgb(12, 5, 36)')
#       )
#     )
# ) %>%
# hc_xAxis(gridLineColor = 'transparent') %>%
# hc_yAxis(gridLineColor = 'transparent') %>%
hc_add_series(
type = "column",
showInLegend = FALSE,
pointWidth = 110,
pointPadding = 0.25,
borderColor = "transparent",
borderWidth = 0,
data = list(
list(
name = "Petronas",
y = 100,
color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/27082/petronas-towers.svg',
aspectRatio = 1.3
)
)
),
list(
name = 'Pisa',
y = 150,
color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/1171/tower-of-pisa.svg',
aspectRatio = 1
)
)
),
list(
name = 'Eiffel tower',
y = 200,
color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/19456/tokyo-tower.svg',
aspectRatio = 0.8
)
)
),
list(
name = 'Ahu-tongariki',
y = 250,
color = list(
pattern = list(
image = 'https://www.svgrepo.com/show/27081/ahu-tongariki.svg',
aspectRatio = 0.75
)
)
)
)
)
knitr::opts_chunk$set(echo = TRUE)
highchart() %>%
hc_chart(type ="column") %>%
hc_xAxis(categories = levels(tips$day)) %>%
hc_add_series(data = tapply(tips$total_bill,tips$day,sum))
library(tidyverse)
library(highcharter)
# Carregando os dados
data(tips, package = 'reshape2')
data(diamonds, package = 'ggplot2')
# Construindo os gráficos
hchart(diamonds$price,
color="#ac040c") %>% hc_title(text = "Histograma")
hchart(tips$sex,
color = "#ac040c") %>% hc_title(text = "Gráfico de Barras") %>% hc_legend(enabled = F)
hchart(AirPassengers,
color = "#ac040c") %>% hc_title(text = "Série Temporal") %>% hc_legend(enabled = F)
highchart() %>%
hc_chart(type ="column") %>%
hc_xAxis(categories = levels(tips$day)) %>%
hc_add_series(data = tapply(tips$total_bill,tips$day,sum))
tips
penguins2
penguins2 <- penguins %>%
count(species, island) %>%
glimpse()
# remotes::install_github("allisonhorst/palmerpenguins")
data(penguins, package = "palmerpenguins")
remotes::install_github("allisonhorst/palmerpenguins")
install_github("allisonhorst/palmerpenguins")
install.packages("remotes")
remotes::install_github("allisonhorst/palmerpenguins")
data(penguins, package = "palmerpenguins")
penguins
tips
tips %>%
count(sex, smoker) #%>%
#glimpse()
tips %>%
count(sex, smoker) %>%
glimpse()
tips %>%
count(sex, smoker)
tips2 <- tips %>%
count(sex, smoker)
hchart(tips2, "column", hcaes(x = sex, y = n, group = species))
tips2 <- tips %>%
count(sex, smoker)
hchart(tips2, "column", hcaes(x = sex, y = n, group = smoker))
tips2
tips2 <- tips %>%
count(sex, smoker) %>%
mutate(sum_n_by_sex = group_by(sex) %>% sum(n))
tips2 <- tips %>%
count(sex, smoker) %>%
mutate(sum_n_by_sex = tapply(n,sex,sum))
tips2 <- tips %>%
count(sex, smoker) %>%
tips2 <- tips2 %>% group_by(sex) %>% mutate(sum_n_by_sex=sum(n))
tips2 <- tips %>%
count(sex, smoker)
tips2 <- tips2 %>% group_by(sex) %>% mutate(sum_n_by_sex=sum(n))
tips2
tips2 <- tips %>%
count(sex, smoker)
tips2 <- tips2 %>%
group_by(sex) %>%
mutate(sum_n_by_sex=sum(n),
perc_smoker_by_sex = n/sum_n_by_sex)
tips2
hchart(tips2, "column", hcaes(x = sex, y = n, group = smoker, label = perc_smoker_by_sex))
hchart(tips2, "column", hcaes(x = sex, y = n, group = smoker)) %>%
hc_tooltip(pointFormat = "<b>Value:</b> {point.yperc_smoker_by_sex} <br>
<b>Percentage</b> {point.percentage:,.2f}%")
hchart(tips2, "column", hcaes(x = sex, y = n, group = smoker, label = perc_smoker_by_sex)) %>%
hc_tooltip(pointFormat = "<b>Value:</b> {point.n} <br>
<b>Percentage</b> {point.perc_smoker_by_sex:,.2f}%")
tips2 <- tips %>%
count(sex, smoker)
tips2 <- tips2 %>%
group_by(sex) %>%
mutate(sum_n_by_sex=sum(n),
perc_smoker_by_sex = (n/sum_n_by_sex)*100)
hchart(tips2, "column", hcaes(x = sex, y = n, group = smoker, label = perc_smoker_by_sex)) %>%
hc_tooltip(pointFormat = "<b>Value:</b> {point.n} <br>
<b>Percentage</b> {point.perc_smoker_by_sex:,.2f}%")
library(MASS)
dscars <- round(mvrnorm(n = 20, mu = c(1, 1), Sigma = matrix(c(1,0,0,1),2)), 2)
dsplan <- round(mvrnorm(n = 10, mu = c(3, 4), Sigma = matrix(c(2,.5,2,2),2)), 2)
dstrck <- round(mvrnorm(n = 15, mu = c(5, 1), Sigma = matrix(c(1,.5,.5,1),2)), 2)
h <- highchart() %>%
hc_chart(type = "scatter", zoomType = "xy") %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = paste0("<span style=\"color:{series.color};\">{series.options.icon}</span>",
"{series.name}: <b>[{point.x}, {point.y}]</b><br/>")
) %>%
hc_add_series(data = list_parse2(as.data.frame(dscars)),
marker = list(symbol = fa_icon_mark("car")),
icon = fa_icon("car"), name = "car") %>%
hc_add_series(data = list_parse2(as.data.frame(dsplan)),
marker = list(symbol = fa_icon_mark("plane")),
icon = fa_icon("plane"), name = "plane") %>%
hc_add_series(data = list_parse2(as.data.frame(dstrck)),
marker = list(symbol = fa_icon_mark("truck")),
icon = fa_icon("truck"), name = "truck")
install.packages("fontawesome")
knitr::opts_chunk$set(echo = TRUE)
fontawesome::fa_i("car")
fontawesome::fa_i("car")
library(MASS)
dscars <- round(mvrnorm(n = 20, mu = c(1, 1), Sigma = matrix(c(1,0,0,1),2)), 2)
dsplan <- round(mvrnorm(n = 10, mu = c(3, 4), Sigma = matrix(c(2,.5,2,2),2)), 2)
dstrck <- round(mvrnorm(n = 15, mu = c(5, 1), Sigma = matrix(c(1,.5,.5,1),2)), 2)
h <- highchart() %>%
hc_chart(type = "scatter", zoomType = "xy") %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = paste0("<span style=\"color:{series.color};\">{series.options.icon}</span>",
"{series.name}: <b>[{point.x}, {point.y}]</b><br/>")
) %>%
hc_add_series(data = list_parse2(as.data.frame(dscars)),
marker = list(symbol = fontawesome::fa_i("car")),
icon = fa_icon("car"), name = "car") %>%
hc_add_series(data = list_parse2(as.data.frame(dsplan)),
marker = list(symbol = fontawesome::fa_i("plane")),
icon = fa_icon("plane"), name = "plane") %>%
hc_add_series(data = list_parse2(as.data.frame(dstrck)),
marker = list(symbol = fontawesome::fa_i("truck")),
icon = fa_icon("truck"), name = "truck")
library(tidyverse)
library(highcharter)
library(MASS)
dscars <- round(mvrnorm(n = 20, mu = c(1, 1), Sigma = matrix(c(1,0,0,1),2)), 2)
dsplan <- round(mvrnorm(n = 10, mu = c(3, 4), Sigma = matrix(c(2,.5,2,2),2)), 2)
dstrck <- round(mvrnorm(n = 15, mu = c(5, 1), Sigma = matrix(c(1,.5,.5,1),2)), 2)
h <- highchart() %>%
hc_chart(type = "scatter", zoomType = "xy") %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = paste0("<span style=\"color:{series.color};\">{series.options.icon}</span>",
"{series.name}: <b>[{point.x}, {point.y}]</b><br/>")
) %>%
hc_add_series(data = list_parse2(as.data.frame(dscars)),
marker = list(symbol = fontawesome::fa_i("car")),
icon = fa_icon("car"), name = "car") %>%
hc_add_series(data = list_parse2(as.data.frame(dsplan)),
marker = list(symbol = fontawesome::fa_i("plane")),
icon = fa_icon("plane"), name = "plane") %>%
hc_add_series(data = list_parse2(as.data.frame(dstrck)),
marker = list(symbol = fontawesome::fa_i("truck")),
icon = fa_icon("truck"), name = "truck")
h
library(MASS)
dscars <- round(mvrnorm(n = 20, mu = c(1, 1), Sigma = matrix(c(1,0,0,1),2)), 2)
dsplan <- round(mvrnorm(n = 10, mu = c(3, 4), Sigma = matrix(c(2,.5,2,2),2)), 2)
dstrck <- round(mvrnorm(n = 15, mu = c(5, 1), Sigma = matrix(c(1,.5,.5,1),2)), 2)
h <- highchart() %>%
hc_chart(type = "scatter", zoomType = "xy") %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = paste0("<span style=\"color:{series.color};\">{series.options.icon}</span>",
"{series.name}: <b>[{point.x}, {point.y}]</b><br/>")
) %>%
hc_add_series(data = list_parse2(as.data.frame(dscars)),
marker = list(symbol = fontawesome::fa_i("car")),
icon = fontawesome::fa_i("car"), name = "car") %>%
hc_add_series(data = list_parse2(as.data.frame(dsplan)),
marker = list(symbol = fontawesome::fa_i("plane")),
icon = fontawesome::fa_i("plane"), name = "plane") %>%
hc_add_series(data = list_parse2(as.data.frame(dstrck)),
marker = list(symbol = fontawesome::fa_i("truck")),
icon = fontawesome::fa_i("truck"), name = "truck")
h
h
h <- highchart() %>%
hc_chart(type = "scatter", zoomType = "xy") %>%
hc_tooltip(
useHTML = TRUE,
pointFormat = paste0("<span style=\"color:{series.color};\">{series.options.icon}</span>",
"{series.name}: <b>[{point.x}, {point.y}]</b><br/>")
)
h
h <- highchart() %>%
hc_title(text = "I'm a pirate looking chart") %>%
hc_xAxis(categories = month.abb) %>%
hc_defs(patterns = list(
list(id = 'custom-pattern',
path = list(d = 'M 0 0 L 10 10 M 9 -1 L 11 1 M -1 9 L 1 11',
stroke = "black",
strokeWidth = 1
)
)
)) %>%
hc_add_series(data = c(7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2,
26.5, 23.3, 18.3, 13.9, 9.6),
type = "area",
fillColor = 'url(#custom-pattern)') %>%
hc_add_theme(hc_theme_handdrawn())
